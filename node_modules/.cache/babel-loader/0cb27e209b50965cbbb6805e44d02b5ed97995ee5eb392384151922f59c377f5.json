{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale } from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [visibleExplanations, setVisibleExplanations] = useState({});\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        setData(result.data);\n        setLoading(false);\n      }\n    });\n  }, []);\n  const filteredData = data.filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter).filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter).filter(entry => {\n    const entryDate = new Date(entry['Date']);\n    const startDate = new Date(dateRange.start);\n    const endDate = new Date(dateRange.end);\n    return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n  });\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(() => Math.floor(Math.random() * 100));\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1\n    }]\n  };\n  const barChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Daily Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1\n    }]\n  };\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1\n    }]\n  };\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [{\n      label: 'Monthly Performance',\n      data: [reachData.reduce((a, b) => a + b, 0), impressionsData.reduce((a, b) => a + b, 0), engagementData.reduce((a, b) => a + b, 0), followersData.reduce((a, b) => a + b, 0)],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1\n    }]\n  };\n  const polarAreaChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1\n    }]\n  };\n  const stackedBarChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.6)'\n    }, {\n      label: 'Reach',\n      data: reachData,\n      backgroundColor: 'rgba(75,192,192,0.6)'\n    }, {\n      label: 'Impressions',\n      data: impressionsData,\n      backgroundColor: 'rgba(54,162,235,0.6)'\n    }]\n  };\n  const areaChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      fill: true\n    }]\n  };\n  const explanations = {\n    line: 'This line chart shows how engagement rate changes over time.',\n    area: 'The area chart displays overall engagement trends with visual emphasis.',\n    bar: 'This bar chart compares daily engagement values for selected filters.',\n    doughnut: 'The doughnut chart shows engagement distribution by platform.',\n    radar: 'Radar chart visualizes combined monthly performance metrics.',\n    polar: 'Polar area chart compares engagement levels across platforms.',\n    stacked: 'Stacked bar chart displays engagement, reach, and impressions together.'\n  };\n  const toggleExplanation = key => {\n    setVisibleExplanations(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleLoader, {\n        color: \"#00BFFF\",\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"toggle-mode\",\n        children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCompanyFilter(e.target.value),\n        value: companyFilter,\n        children: companyList.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company,\n          children: company\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setEngagementFilter(e.target.value),\n        value: engagementFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Engagement Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), engagementLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: `> ${level}%`\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.start,\n          onChange: e => setDateRange({\n            ...dateRange,\n            start: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.end,\n          onChange: e => setDateRange({\n            ...dateRange,\n            end: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Social Media Performance Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [{\n          key: 'line',\n          label: 'Engagement Rate Over Time',\n          chart: /*#__PURE__*/_jsxDEV(Line, {\n            data: engagementChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 71\n          }, this)\n        }, {\n          key: 'area',\n          label: 'Area Chart - Engagement',\n          chart: /*#__PURE__*/_jsxDEV(Line, {\n            data: areaChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 69\n          }, this)\n        }, {\n          key: 'bar',\n          label: 'Daily Engagement Comparison',\n          chart: /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 72\n          }, this)\n        }, {\n          key: 'doughnut',\n          label: 'Engagement by Platform',\n          chart: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: doughnutChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 72\n          }, this)\n        }, {\n          key: 'radar',\n          label: 'Monthly Performance',\n          chart: /*#__PURE__*/_jsxDEV(Radar, {\n            data: radarChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 66\n          }, this)\n        }, {\n          key: 'polar',\n          label: 'Engagement by Platform (Polar Area)',\n          chart: /*#__PURE__*/_jsxDEV(PolarArea, {\n            data: polarAreaChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 82\n          }, this)\n        }, {\n          key: 'stacked',\n          label: 'Stacked Bar Chart',\n          chart: /*#__PURE__*/_jsxDEV(Bar, {\n            data: stackedBarChartData,\n            options: {\n              scales: {\n                x: {\n                  stacked: true\n                },\n                y: {\n                  stacked: true\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 22\n          }, this)\n        }].map(({\n          key,\n          label,\n          chart\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), chart, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleExplanation(key),\n            className: \"explanation-toggle\",\n            children: visibleExplanations[key] ? 'Hide Explanation' : 'Show Explanation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), visibleExplanations[key] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chart-explanation\",\n            children: explanations[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 44\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"/n2NKrh5ioPsqz8Ms16PeKRbt5I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Pie","Bar","Radar","Doughnut","PolarArea","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadarController","BarElement","Filler","RadialLinearScale","PolarAreaController","TimeScale","CircleLoader","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","loading","setLoading","companyFilter","setCompanyFilter","engagementFilter","setEngagementFilter","dateRange","setDateRange","start","end","darkMode","setDarkMode","visibleExplanations","setVisibleExplanations","parse","download","header","dynamicTyping","complete","result","filteredData","filter","entry","entryDate","Date","startDate","endDate","engagementData","map","reachData","impressionsData","followersData","dates","platforms","engagementByPlatform","Math","floor","random","engagementChartData","labels","datasets","label","borderColor","fill","tension","barChartData","backgroundColor","borderWidth","doughnutChartData","radarChartData","reduce","a","b","polarAreaChartData","stackedBarChartData","areaChartData","explanations","line","area","bar","doughnut","radar","polar","stacked","toggleExplanation","key","prev","companyList","Set","engagementLevels","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","value","company","index","level","type","chart","options","scales","x","y","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale,\n} from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale\n);\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n  const [darkMode, setDarkMode] = useState(false);\n  const [visibleExplanations, setVisibleExplanations] = useState({});\n\n  useEffect(() => {\n    Papa.parse(\n      'https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv',\n      {\n        download: true,\n        header: true,\n        dynamicTyping: true,\n        complete: (result) => {\n          setData(result.data);\n          setLoading(false);\n        },\n      }\n    );\n  }, []);\n\n  const filteredData = data\n    .filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter)\n    .filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter)\n    .filter(entry => {\n      const entryDate = new Date(entry['Date']);\n      const startDate = new Date(dateRange.start);\n      const endDate = new Date(dateRange.end);\n      return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n    });\n\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(() => Math.floor(Math.random() * 100));\n\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1,\n    }],\n  };\n\n  const barChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Daily Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n    }],\n  };\n\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1,\n    }],\n  };\n\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [{\n      label: 'Monthly Performance',\n      data: [\n        reachData.reduce((a, b) => a + b, 0),\n        impressionsData.reduce((a, b) => a + b, 0),\n        engagementData.reduce((a, b) => a + b, 0),\n        followersData.reduce((a, b) => a + b, 0),\n      ],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n    }],\n  };\n\n  const polarAreaChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1,\n    }],\n  };\n\n  const stackedBarChartData = {\n    labels: dates,\n    datasets: [\n      { label: 'Engagement', data: engagementData, backgroundColor: 'rgba(255,99,132,0.6)' },\n      { label: 'Reach', data: reachData, backgroundColor: 'rgba(75,192,192,0.6)' },\n      { label: 'Impressions', data: impressionsData, backgroundColor: 'rgba(54,162,235,0.6)' },\n    ],\n  };\n\n  const areaChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      fill: true,\n    }],\n  };\n\n  const explanations = {\n    line: 'This line chart shows how engagement rate changes over time.',\n    area: 'The area chart displays overall engagement trends with visual emphasis.',\n    bar: 'This bar chart compares daily engagement values for selected filters.',\n    doughnut: 'The doughnut chart shows engagement distribution by platform.',\n    radar: 'Radar chart visualizes combined monthly performance metrics.',\n    polar: 'Polar area chart compares engagement levels across platforms.',\n    stacked: 'Stacked bar chart displays engagement, reach, and impressions together.',\n  };\n\n  const toggleExplanation = (key) => {\n    setVisibleExplanations(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <CircleLoader color=\"#00BFFF\" size={80} />\n        <p>Loading data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`dashboard-container ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"sidebar\">\n        <h3>Dashboard</h3>\n        <button onClick={() => setDarkMode(!darkMode)} className=\"toggle-mode\">\n          {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\n        </button>\n\n        <select onChange={(e) => setCompanyFilter(e.target.value)} value={companyFilter}>\n          {companyList.map((company, index) => (\n            <option key={index} value={company}>{company}</option>\n          ))}\n        </select>\n\n        <select onChange={(e) => setEngagementFilter(e.target.value)} value={engagementFilter}>\n          <option value=\"\">Select Engagement Filter</option>\n          {engagementLevels.map((level) => (\n            <option key={level} value={level}>{`> ${level}%`}</option>\n          ))}\n        </select>\n\n        <div className=\"date-range-picker\">\n          <input type=\"date\" value={dateRange.start} onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })} />\n          <input type=\"date\" value={dateRange.end} onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })} />\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        <h2>Social Media Performance Dashboard</h2>\n        <div className=\"chart-container\">\n          {[\n            { key: 'line', label: 'Engagement Rate Over Time', chart: <Line data={engagementChartData} /> },\n            { key: 'area', label: 'Area Chart - Engagement', chart: <Line data={areaChartData} /> },\n            { key: 'bar', label: 'Daily Engagement Comparison', chart: <Bar data={barChartData} /> },\n            { key: 'doughnut', label: 'Engagement by Platform', chart: <Doughnut data={doughnutChartData} /> },\n            { key: 'radar', label: 'Monthly Performance', chart: <Radar data={radarChartData} /> },\n            { key: 'polar', label: 'Engagement by Platform (Polar Area)', chart: <PolarArea data={polarAreaChartData} /> },\n            {\n              key: 'stacked',\n              label: 'Stacked Bar Chart',\n              chart: <Bar data={stackedBarChartData} options={{ scales: { x: { stacked: true }, y: { stacked: true } } }} />\n            }\n          ].map(({ key, label, chart }) => (\n            <div className=\"chart-card\" key={key}>\n              <h3>{label}</h3>\n              {chart}\n              <button onClick={() => toggleExplanation(key)} className=\"explanation-toggle\">\n                {visibleExplanations[key] ? 'Hide Explanation' : 'Show Explanation'}\n              </button>\n              {visibleExplanations[key] && <p className=\"chart-explanation\">{explanations[key]}</p>}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}