{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale } from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [darkMode, setDarkMode] = useState(false); // Toggle mode state\n\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        setData(result.data);\n        setLoading(false);\n      }\n    });\n  }, []);\n  const filteredData = data.filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter).filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter).filter(entry => {\n    const entryDate = new Date(entry['Date']);\n    const startDate = new Date(dateRange.start);\n    const endDate = new Date(dateRange.end);\n    return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n  });\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(() => Math.floor(Math.random() * 100));\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1\n    }]\n  };\n  const barChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Daily Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1\n    }]\n  };\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1\n    }]\n  };\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [{\n      label: 'Monthly Performance',\n      data: [reachData.reduce((a, b) => a + b, 0), impressionsData.reduce((a, b) => a + b, 0), engagementData.reduce((a, b) => a + b, 0), followersData.reduce((a, b) => a + b, 0)],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1\n    }]\n  };\n  const polarAreaChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1\n    }]\n  };\n  const stackedBarChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.6)'\n    }, {\n      label: 'Reach',\n      data: reachData,\n      backgroundColor: 'rgba(75,192,192,0.6)'\n    }, {\n      label: 'Impressions',\n      data: impressionsData,\n      backgroundColor: 'rgba(54,162,235,0.6)'\n    }]\n  };\n  const areaChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      fill: true\n    }]\n  };\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleLoader, {\n        color: \"#00BFFF\",\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"toggle-mode\",\n        children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCompanyFilter(e.target.value),\n        value: companyFilter,\n        children: companyList.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company,\n          children: company\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setEngagementFilter(e.target.value),\n        value: engagementFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Engagement Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), engagementLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: `> ${level}%`\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.start,\n          onChange: e => setDateRange({\n            ...dateRange,\n            start: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.end,\n          onChange: e => setDateRange({\n            ...dateRange,\n            end: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Social Media Performance Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement Rate Over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: engagementChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Area Chart - Engagement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: areaChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Daily Engagement Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement by Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: doughnutChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Monthly Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            data: radarChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement by Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(PolarArea, {\n            data: polarAreaChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stacked Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: stackedBarChartData,\n            options: {\n              scales: {\n                x: {\n                  stacked: true\n                },\n                y: {\n                  stacked: true\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"wpgwcMO4IN08yh0cKGIkTDGRT7Q=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Pie","Bar","Radar","Doughnut","PolarArea","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadarController","BarElement","Filler","RadialLinearScale","PolarAreaController","TimeScale","CircleLoader","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","loading","setLoading","companyFilter","setCompanyFilter","engagementFilter","setEngagementFilter","dateRange","setDateRange","start","end","darkMode","setDarkMode","parse","download","header","dynamicTyping","complete","result","filteredData","filter","entry","entryDate","Date","startDate","endDate","engagementData","map","reachData","impressionsData","followersData","dates","platforms","engagementByPlatform","Math","floor","random","engagementChartData","labels","datasets","label","borderColor","fill","tension","barChartData","backgroundColor","borderWidth","doughnutChartData","radarChartData","reduce","a","b","polarAreaChartData","stackedBarChartData","areaChartData","companyList","Set","engagementLevels","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","value","company","index","level","type","options","scales","x","stacked","y","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale,\n} from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale\n);\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n  const [darkMode, setDarkMode] = useState(false); // Toggle mode state\n\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        setData(result.data);\n        setLoading(false);\n      },\n    });\n  }, []);\n\n  const filteredData = data\n    .filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter)\n    .filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter)\n    .filter(entry => {\n      const entryDate = new Date(entry['Date']);\n      const startDate = new Date(dateRange.start);\n      const endDate = new Date(dateRange.end);\n      return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n    });\n\n  const engagementData = filteredData.map((entry) => entry['Engagement (%)']);\n  const reachData = filteredData.map((entry) => entry['Reach']);\n  const impressionsData = filteredData.map((entry) => entry['Impressions']);\n  const followersData = filteredData.map((entry) => entry['Followers Gained']);\n  const dates = filteredData.map((entry) => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(() => Math.floor(Math.random() * 100));\n\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1,\n    }],\n  };\n\n  const barChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Daily Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n    }],\n  };\n\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1,\n    }],\n  };\n\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [{\n      label: 'Monthly Performance',\n      data: [\n        reachData.reduce((a, b) => a + b, 0),\n        impressionsData.reduce((a, b) => a + b, 0),\n        engagementData.reduce((a, b) => a + b, 0),\n        followersData.reduce((a, b) => a + b, 0),\n      ],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n    }],\n  };\n\n  const polarAreaChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1,\n    }],\n  };\n\n  const stackedBarChartData = {\n    labels: dates,\n    datasets: [\n      { label: 'Engagement', data: engagementData, backgroundColor: 'rgba(255,99,132,0.6)' },\n      { label: 'Reach', data: reachData, backgroundColor: 'rgba(75,192,192,0.6)' },\n      { label: 'Impressions', data: impressionsData, backgroundColor: 'rgba(54,162,235,0.6)' },\n    ],\n  };\n\n  const areaChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      fill: true,\n    }],\n  };\n\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <CircleLoader color=\"#00BFFF\" size={80} />\n        <p>Loading data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`dashboard-container ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"sidebar\">\n        <h3>Dashboard</h3>\n        <button onClick={() => setDarkMode(!darkMode)} className=\"toggle-mode\">\n          {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\n        </button>\n\n        <select onChange={(e) => setCompanyFilter(e.target.value)} value={companyFilter}>\n          {companyList.map((company, index) => (\n            <option key={index} value={company}>{company}</option>\n          ))}\n        </select>\n\n        <select onChange={(e) => setEngagementFilter(e.target.value)} value={engagementFilter}>\n          <option value=\"\">Select Engagement Filter</option>\n          {engagementLevels.map((level) => (\n            <option key={level} value={level}>{`> ${level}%`}</option>\n          ))}\n        </select>\n\n        <div className=\"date-range-picker\">\n          <input\n            type=\"date\"\n            value={dateRange.start}\n            onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\n          />\n          <input\n            type=\"date\"\n            value={dateRange.end}\n            onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\n          />\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        <h2>Social Media Performance Dashboard</h2>\n        <div className=\"chart-container\">\n          <div className=\"chart-card\"><h3>Engagement Rate Over Time</h3><Line data={engagementChartData} /></div>\n          <div className=\"chart-card\"><h3>Area Chart - Engagement</h3><Line data={areaChartData} /></div>\n          <div className=\"chart-card\"><h3>Daily Engagement Comparison</h3><Bar data={barChartData} /></div>\n          <div className=\"chart-card\"><h3>Engagement by Platform</h3><Doughnut data={doughnutChartData} /></div>\n          <div className=\"chart-card\"><h3>Monthly Performance</h3><Radar data={radarChartData} /></div>\n          <div className=\"chart-card\"><h3>Engagement by Platform</h3><PolarArea data={polarAreaChartData} /></div>\n          <div className=\"chart-card\">\n            <h3>Stacked Bar Chart</h3>\n            <Bar data={stackedBarChartData} options={{ scales: { x: { stacked: true }, y: { stacked: true } } }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}