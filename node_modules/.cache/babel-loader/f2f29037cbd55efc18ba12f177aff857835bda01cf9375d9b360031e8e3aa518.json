{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale } from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, PolarAreaController, TimeScale);\nconst calculatePercentageChange = data => {\n  if (data.length < 2) return 'Not enough data';\n  const first = data[0];\n  const last = data[data.length - 1];\n  const change = (last - first) / Math.abs(first) * 100;\n  return change.toFixed(2);\n};\nconst calculateAverage = data => {\n  if (data.length === 0) return 0;\n  const sum = data.reduce((a, b) => a + b, 0);\n  return (sum / data.length).toFixed(2);\n};\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [showInsights, setShowInsights] = useState({\n    engagementLine: false,\n    areaChart: false,\n    barChart: false,\n    doughnutChart: false,\n    radarChart: false,\n    polarChart: false,\n    stackedBar: false\n  });\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        setData(result.data);\n        setLoading(false);\n      }\n    });\n  }, []);\n  const filteredData = data.filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter).filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter).filter(entry => {\n    const entryDate = new Date(entry['Date']);\n    const startDate = new Date(dateRange.start);\n    const endDate = new Date(dateRange.end);\n    return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n  });\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(platform => {\n    const platformData = filteredData.filter(entry => entry['Platform'] === platform);\n    const totalEngagement = platformData.reduce((sum, entry) => sum + entry['Engagement (%)'], 0);\n    return platformData.length ? (totalEngagement / platformData.length).toFixed(2) : 0;\n  });\n  const followersByPlatform = platforms.map(platform => {\n    const platformData = filteredData.filter(entry => entry['Platform'] === platform);\n    const totalFollowers = platformData.reduce((sum, entry) => sum + entry['Followers Gained'], 0);\n    return totalFollowers;\n  });\n  const updateToggle = key => {\n    setShowInsights(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleLoader, {\n        color: \"#00BFFF\",\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"toggle-mode\",\n        children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCompanyFilter(e.target.value),\n        value: companyFilter,\n        children: companyList.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company,\n          children: company\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setEngagementFilter(e.target.value),\n        value: engagementFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Engagement Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), engagementLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: `> ${level}%`\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.start,\n          onChange: e => setDateRange({\n            ...dateRange,\n            start: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.end,\n          onChange: e => setDateRange({\n            ...dateRange,\n            end: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Social Media Performance Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement Rate Over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: dates,\n              datasets: [{\n                label: 'Engagement Rate (%)',\n                data: engagementData,\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n                tension: 0.1\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateToggle('engagementLine'),\n            children: \"Toggle Insight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), showInsights.engagementLine && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: engagementData.length >= 2 ? `Engagement changed by ${calculatePercentageChange(engagementData)}%` : 'Not enough data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"This measure is calculated as the percentage change in the engagement rate from the first to the last data point.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Area Chart - Engagement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: dates,\n              datasets: [{\n                label: 'Engagement Rate (%)',\n                data: engagementData,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderWidth: 1,\n                fill: true\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateToggle('areaChart'),\n            children: \"Toggle Insight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), showInsights.areaChart && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Average Engagement Rate: \", calculateAverage(engagementData), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"This measure is calculated as the average of all engagement rates across the selected period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Daily Engagement Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: {\n              labels: dates,\n              datasets: [{\n                label: 'Daily Engagement',\n                data: engagementData,\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateToggle('barChart'),\n            children: \"Toggle Insight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), showInsights.barChart && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Avg Daily Engagement: \", calculateAverage(engagementData), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"This measure is calculated as the average daily engagement rate over the selected period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement by Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: {\n              labels: platforms,\n              datasets: [{\n                data: engagementByPlatform,\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateToggle('doughnutChart'),\n            children: \"Toggle Insight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), showInsights.doughnutChart && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Average Engagement per Platform:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: platforms.map((platform, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [platform, \": \", engagementByPlatform[index], \"%\"]\n              }, platform, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"This measure is the average engagement rate for each platform during the selected period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Overall Performance by Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            data: {\n              labels: platforms,\n              datasets: [{\n                label: 'Followers Gained',\n                data: followersByPlatform,\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                borderWidth: 2\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateToggle('radarChart'),\n            children: \"Toggle Insight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), showInsights.radarChart && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Total Followers Gained by Platform:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: platforms.map((platform, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [platform, \": \", followersByPlatform[index]]\n              }, platform, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"This chart represents the total number of followers gained per platform over the selected period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"b7X5NMaeNfRinEkqkLWorZW+lsA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Pie","Bar","Radar","Doughnut","PolarArea","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadarController","BarElement","Filler","RadialLinearScale","PolarAreaController","TimeScale","CircleLoader","jsxDEV","_jsxDEV","register","calculatePercentageChange","data","length","first","last","change","Math","abs","toFixed","calculateAverage","sum","reduce","a","b","Dashboard","_s","setData","loading","setLoading","companyFilter","setCompanyFilter","engagementFilter","setEngagementFilter","dateRange","setDateRange","start","end","darkMode","setDarkMode","showInsights","setShowInsights","engagementLine","areaChart","barChart","doughnutChart","radarChart","polarChart","stackedBar","parse","download","header","dynamicTyping","complete","result","filteredData","filter","entry","entryDate","Date","startDate","endDate","engagementData","map","reachData","impressionsData","followersData","dates","platforms","engagementByPlatform","platform","platformData","totalEngagement","followersByPlatform","totalFollowers","updateToggle","key","prev","companyList","Set","engagementLevels","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","value","company","index","level","type","labels","datasets","label","borderColor","fill","tension","backgroundColor","borderWidth","hoverBackgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, PolarArea } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale,\n} from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  PolarAreaController,\n  TimeScale\n);\n\nconst calculatePercentageChange = (data) => {\n  if (data.length < 2) return 'Not enough data';\n  const first = data[0];\n  const last = data[data.length - 1];\n  const change = ((last - first) / Math.abs(first)) * 100;\n  return change.toFixed(2);\n};\n\nconst calculateAverage = (data) => {\n  if (data.length === 0) return 0;\n  const sum = data.reduce((a, b) => a + b, 0);\n  return (sum / data.length).toFixed(2);\n};\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n  const [darkMode, setDarkMode] = useState(false);\n\n  const [showInsights, setShowInsights] = useState({\n    engagementLine: false,\n    areaChart: false,\n    barChart: false,\n    doughnutChart: false,\n    radarChart: false,\n    polarChart: false,\n    stackedBar: false,\n  });\n\n  useEffect(() => {\n    Papa.parse(\n      'https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv',\n      {\n        download: true,\n        header: true,\n        dynamicTyping: true,\n        complete: (result) => {\n          setData(result.data);\n          setLoading(false);\n        },\n      }\n    );\n  }, []);\n\n  const filteredData = data\n    .filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter)\n    .filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter)\n    .filter(entry => {\n      const entryDate = new Date(entry['Date']);\n      const startDate = new Date(dateRange.start);\n      const endDate = new Date(dateRange.end);\n      return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n    });\n\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(platform => {\n    const platformData = filteredData.filter(entry => entry['Platform'] === platform);\n    const totalEngagement = platformData.reduce((sum, entry) => sum + entry['Engagement (%)'], 0);\n    return platformData.length ? (totalEngagement / platformData.length).toFixed(2) : 0;\n  });\n\n  const followersByPlatform = platforms.map(platform => {\n    const platformData = filteredData.filter(entry => entry['Platform'] === platform);\n    const totalFollowers = platformData.reduce((sum, entry) => sum + entry['Followers Gained'], 0);\n    return totalFollowers;\n  });\n\n  const updateToggle = (key) => {\n    setShowInsights(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))];\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <CircleLoader color=\"#00BFFF\" size={80} />\n        <p>Loading data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`dashboard-container ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"sidebar\">\n        <h3>Dashboard</h3>\n        <button onClick={() => setDarkMode(!darkMode)} className=\"toggle-mode\">\n          {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\n        </button>\n\n        <select onChange={(e) => setCompanyFilter(e.target.value)} value={companyFilter}>\n          {companyList.map((company, index) => (\n            <option key={index} value={company}>{company}</option>\n          ))}\n        </select>\n\n        <select onChange={(e) => setEngagementFilter(e.target.value)} value={engagementFilter}>\n          <option value=\"\">Select Engagement Filter</option>\n          {engagementLevels.map((level) => (\n            <option key={level} value={level}>{`> ${level}%`}</option>\n          ))}\n        </select>\n\n        <div className=\"date-range-picker\">\n          <input\n            type=\"date\"\n            value={dateRange.start}\n            onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\n          />\n          <input\n            type=\"date\"\n            value={dateRange.end}\n            onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\n          />\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        <h2>Social Media Performance Dashboard</h2>\n        <div className=\"chart-container\">\n\n          <div className=\"chart-card\">\n            <h3>Engagement Rate Over Time</h3>\n            <Line data={{\n              labels: dates,\n              datasets: [{\n                label: 'Engagement Rate (%)',\n                data: engagementData,\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n                tension: 0.1,\n              }]\n            }} />\n            <button onClick={() => updateToggle('engagementLine')}>Toggle Insight</button>\n            {showInsights.engagementLine && (\n              <div>\n                <p>{engagementData.length >= 2 ? `Engagement changed by ${calculatePercentageChange(engagementData)}%` : 'Not enough data'}</p>\n                <p><em>This measure is calculated as the percentage change in the engagement rate from the first to the last data point.</em></p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Area Chart - Engagement</h3>\n            <Line data={{\n              labels: dates,\n              datasets: [{\n                label: 'Engagement Rate (%)',\n                data: engagementData,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderWidth: 1,\n                fill: true,\n              }]\n            }} />\n            <button onClick={() => updateToggle('areaChart')}>Toggle Insight</button>\n            {showInsights.areaChart && (\n              <div>\n                <p>Average Engagement Rate: {calculateAverage(engagementData)}%</p>\n                <p><em>This measure is calculated as the average of all engagement rates across the selected period.</em></p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Daily Engagement Comparison</h3>\n            <Bar data={{\n              labels: dates,\n              datasets: [{\n                label: 'Daily Engagement',\n                data: engagementData,\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n              }]\n            }} />\n            <button onClick={() => updateToggle('barChart')}>Toggle Insight</button>\n            {showInsights.barChart && (\n              <div>\n                <p>Avg Daily Engagement: {calculateAverage(engagementData)}%</p>\n                <p><em>This measure is calculated as the average daily engagement rate over the selected period.</em></p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Engagement by Platform</h3>\n            <Doughnut data={{\n              labels: platforms,\n              datasets: [{\n                data: engagementByPlatform,\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\n              }]\n            }} />\n            <button onClick={() => updateToggle('doughnutChart')}>Toggle Insight</button>\n            {showInsights.doughnutChart && (\n              <div>\n                <p>Average Engagement per Platform:</p>\n                <ul>\n                  {platforms.map((platform, index) => (\n                    <li key={platform}>{platform}: {engagementByPlatform[index]}%</li>\n                  ))}\n                </ul>\n                <p><em>This measure is the average engagement rate for each platform during the selected period.</em></p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Overall Performance by Platform</h3>\n            <Radar data={{\n              labels: platforms,\n              datasets: [{\n                label: 'Followers Gained',\n                data: followersByPlatform,\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                borderWidth: 2,\n              }]\n            }} />\n            <button onClick={() => updateToggle('radarChart')}>Toggle Insight</button>\n            {showInsights.radarChart && (\n              <div>\n                <p>Total Followers Gained by Platform:</p>\n                <ul>\n                  {platforms.map((platform, index) => (\n                    <li key={platform}>{platform}: {followersByPlatform[index]}</li>\n                  ))}\n                </ul>\n                <p><em>This chart represents the total number of followers gained per platform over the selected period.</em></p>\n              </div>\n            )}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}