{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, Scatter, PolarArea, Bubble } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, BubbleController, PolarAreaController, TimeScale } from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\n// Register necessary ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadarController, BarElement, Filler, RadialLinearScale, BubbleController, PolarAreaController, TimeScale);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  useEffect(() => {\n    // Load CSV data\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        setData(result.data);\n        setLoading(false);\n      }\n    });\n    return () => {\n      const canvas = document.getElementsByTagName('canvas');\n      if (canvas.length > 0) {\n        const chart = ChartJS.getChart(canvas[0]);\n        if (chart) {\n          chart.destroy();\n        }\n      }\n    };\n  }, []);\n\n  // Filter data by company, engagement, and date range\n  const filteredData = data.filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter).filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter).filter(entry => {\n    const entryDate = new Date(entry['Date']);\n    const startDate = new Date(dateRange.start);\n    const endDate = new Date(dateRange.end);\n    return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n  });\n\n  // Gather necessary metrics\n  const engagementData = filteredData.map(entry => entry['Engagement (%)']);\n  const reachData = filteredData.map(entry => entry['Reach']);\n  const impressionsData = filteredData.map(entry => entry['Impressions']);\n  const followersData = filteredData.map(entry => entry['Followers Gained']);\n  const dates = filteredData.map(entry => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map(platform => Math.floor(Math.random() * 100));\n\n  // Prepare data for the charts\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1\n    }]\n  };\n  const barChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Daily Engagement',\n      data: engagementData,\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1\n    }]\n  };\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [{\n      data: engagementByPlatform,\n      backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n      borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n      borderWidth: 1\n    }]\n  };\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [{\n      label: 'Monthly Performance',\n      data: [reachData.reduce((acc, curr) => acc + curr, 0), impressionsData.reduce((acc, curr) => acc + curr, 0), engagementData.reduce((acc, curr) => acc + curr, 0), followersData.reduce((acc, curr) => acc + curr, 0)],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1\n    }]\n  };\n  const scatterChartData = {\n    datasets: [{\n      label: 'Followers vs Impressions',\n      data: followersData.map((followers, index) => ({\n        x: followers,\n        y: impressionsData[index]\n      })),\n      backgroundColor: 'rgba(255,99,132,0.6)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1\n    }]\n  };\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))]; // List of unique company names\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleLoader, {\n        color: \"#00BFFF\",\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCompanyFilter(e.target.value),\n        value: companyFilter,\n        children: companyList.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company,\n          children: company\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setEngagementFilter(e.target.value),\n        value: engagementFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Engagement Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), engagementLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: `> ${level}%`\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.start,\n          onChange: e => setDateRange({\n            ...dateRange,\n            start: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateRange.end,\n          onChange: e => setDateRange({\n            ...dateRange,\n            end: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Social Media Performance Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement Rate Over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: engagementChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Daily Engagement Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Engagement by Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: doughnutChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Monthly Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            data: radarChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Followers vs Impressions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            data: scatterChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"bOnOnwWZctIpE8k7QBZn1ahWH5A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Pie","Bar","Radar","Doughnut","Scatter","PolarArea","Bubble","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadarController","BarElement","Filler","RadialLinearScale","BubbleController","PolarAreaController","TimeScale","CircleLoader","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","loading","setLoading","companyFilter","setCompanyFilter","engagementFilter","setEngagementFilter","dateRange","setDateRange","start","end","parse","download","header","dynamicTyping","complete","result","canvas","document","getElementsByTagName","length","chart","getChart","destroy","filteredData","filter","entry","entryDate","Date","startDate","endDate","engagementData","map","reachData","impressionsData","followersData","dates","platforms","engagementByPlatform","platform","Math","floor","random","engagementChartData","labels","datasets","label","borderColor","fill","tension","barChartData","backgroundColor","borderWidth","doughnutChartData","radarChartData","reduce","acc","curr","scatterChartData","followers","index","x","y","companyList","Set","engagementLevels","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","company","level","type","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie, Bar, Radar, Doughnut, Scatter, PolarArea, Bubble } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  BubbleController,\n  PolarAreaController,\n  TimeScale,\n} from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\n// Register necessary ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadarController,\n  BarElement,\n  Filler,\n  RadialLinearScale,\n  BubbleController,\n  PolarAreaController,\n  TimeScale\n);\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [companyFilter, setCompanyFilter] = useState('All');\n  const [engagementFilter, setEngagementFilter] = useState('');\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n\n  useEffect(() => {\n    // Load CSV data\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        setData(result.data);\n        setLoading(false);\n      },\n    });\n\n    return () => {\n      const canvas = document.getElementsByTagName('canvas');\n      if (canvas.length > 0) {\n        const chart = ChartJS.getChart(canvas[0]);\n        if (chart) {\n          chart.destroy();\n        }\n      }\n    };\n  }, []);\n\n  // Filter data by company, engagement, and date range\n  const filteredData = data\n    .filter(entry => companyFilter === 'All' || entry['Company Name'] === companyFilter)\n    .filter(entry => engagementFilter === '' || entry['Engagement (%)'] >= engagementFilter)\n    .filter(entry => {\n      const entryDate = new Date(entry['Date']);\n      const startDate = new Date(dateRange.start);\n      const endDate = new Date(dateRange.end);\n      return (!dateRange.start || entryDate >= startDate) && (!dateRange.end || entryDate <= endDate);\n    });\n\n  // Gather necessary metrics\n  const engagementData = filteredData.map((entry) => entry['Engagement (%)']);\n  const reachData = filteredData.map((entry) => entry['Reach']);\n  const impressionsData = filteredData.map((entry) => entry['Impressions']);\n  const followersData = filteredData.map((entry) => entry['Followers Gained']);\n  const dates = filteredData.map((entry) => entry['Date']);\n  const platforms = ['Instagram', 'Facebook', 'Twitter', 'LinkedIn'];\n  const engagementByPlatform = platforms.map((platform) => Math.floor(Math.random() * 100));\n\n  // Prepare data for the charts\n  const engagementChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Engagement Rate (%)',\n        data: engagementData,\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false,\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const barChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Daily Engagement',\n        data: engagementData,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const doughnutChartData = {\n    labels: platforms,\n    datasets: [\n      {\n        data: engagementByPlatform,\n        backgroundColor: ['rgba(75,192,192,0.5)', 'rgba(153,102,255,0.5)', 'rgba(54,162,235,0.5)', 'rgba(255,159,64,0.5)'],\n        borderColor: ['rgba(75,192,192,1)', 'rgba(153,102,255,1)', 'rgba(54,162,235,1)', 'rgba(255,159,64,1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const radarChartData = {\n    labels: ['Reach', 'Impressions', 'Engagement', 'Followers Gained'],\n    datasets: [\n      {\n        label: 'Monthly Performance',\n        data: [\n          reachData.reduce((acc, curr) => acc + curr, 0),\n          impressionsData.reduce((acc, curr) => acc + curr, 0),\n          engagementData.reduce((acc, curr) => acc + curr, 0),\n          followersData.reduce((acc, curr) => acc + curr, 0),\n        ],\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const scatterChartData = {\n    datasets: [\n      {\n        label: 'Followers vs Impressions',\n        data: followersData.map((followers, index) => ({\n          x: followers,\n          y: impressionsData[index],\n        })),\n        backgroundColor: 'rgba(255,99,132,0.6)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const companyList = ['All', ...new Set(data.map(entry => entry['Company Name']))]; // List of unique company names\n  const engagementLevels = [0, 20, 40, 60, 80, 100];\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <CircleLoader color=\"#00BFFF\" size={80} />\n        <p>Loading data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"sidebar\">\n        <h3>Dashboard</h3>\n        <select onChange={(e) => setCompanyFilter(e.target.value)} value={companyFilter}>\n          {companyList.map((company, index) => (\n            <option key={index} value={company}>{company}</option>\n          ))}\n        </select>\n\n        <select onChange={(e) => setEngagementFilter(e.target.value)} value={engagementFilter}>\n          <option value=\"\">Select Engagement Filter</option>\n          {engagementLevels.map((level) => (\n            <option key={level} value={level}>{`> ${level}%`}</option>\n          ))}\n        </select>\n\n        <div className=\"date-range-picker\">\n          <input\n            type=\"date\"\n            value={dateRange.start}\n            onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\n          />\n          <input\n            type=\"date\"\n            value={dateRange.end}\n            onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\n          />\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        <h2>Social Media Performance Dashboard</h2>\n        <div className=\"chart-container\">\n          <div className=\"chart-card\">\n            <h3>Engagement Rate Over Time</h3>\n            <Line data={engagementChartData} />\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Daily Engagement Comparison</h3>\n            <Bar data={barChartData} />\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Engagement by Platform</h3>\n            <Doughnut data={doughnutChartData} />\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Monthly Performance</h3>\n            <Radar data={radarChartData} />\n          </div>\n\n          <div className=\"chart-card\">\n            <h3>Followers vs Impressions</h3>\n            <Scatter data={scatterChartData} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}