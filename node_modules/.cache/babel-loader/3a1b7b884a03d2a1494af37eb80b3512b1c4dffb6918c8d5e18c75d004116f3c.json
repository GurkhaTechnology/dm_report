{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse'; // CSV parser to fetch the data from Google Sheets\nimport { Line } from 'react-chartjs-2'; // Import Line chart component from Chart.js\nimport Chart from 'chart.js/auto'; // Import the Chart.js library\n\n// The URL for the public CSV file from Google Sheets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sheetUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv';\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]); // State to hold the data\n  const [chartData, setChartData] = useState({}); // State for chart data\n\n  useEffect(() => {\n    // Fetching data from Google Sheets using PapaParse\n    Papa.parse(sheetUrl, {\n      download: true,\n      header: true,\n      complete: results => {\n        console.log(\"Data fetched from Google Sheets:\", results.data);\n        setData(results.data);\n\n        // Prepare data for chart visualization\n        const dates = results.data.map(row => row.Date);\n        const reachData = results.data.map(row => row.Reach);\n        const impressionsData = results.data.map(row => row.Impressions);\n        const engagementData = results.data.map(row => row[\"Engagement (%)\"]);\n        setChartData({\n          labels: dates,\n          datasets: [{\n            label: 'Reach',\n            data: reachData,\n            borderColor: 'rgba(75,192,192,1)',\n            fill: false\n          }, {\n            label: 'Impressions',\n            data: impressionsData,\n            borderColor: 'rgba(255,159,64,1)',\n            fill: false\n          }, {\n            label: 'Engagement',\n            data: engagementData,\n            borderColor: 'rgba(153,102,255,1)',\n            fill: false\n          }]\n        });\n      },\n      error: error => {\n        console.error(\"Error fetching data:\", error);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Social Media Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Impressions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Engagement (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Followers Gained\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Company ID\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Company Name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Date\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Reach\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Impressions\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Engagement (%)\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Followers Gained\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Performance Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7bnCD+tZPJCGzctX2dvBrHQ3sBg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Chart","jsxDEV","_jsxDEV","sheetUrl","Dashboard","_s","data","setData","chartData","setChartData","parse","download","header","complete","results","console","log","dates","map","row","Date","reachData","Reach","impressionsData","Impressions","engagementData","labels","datasets","label","borderColor","fill","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';  // CSV parser to fetch the data from Google Sheets\nimport { Line } from 'react-chartjs-2';  // Import Line chart component from Chart.js\nimport Chart from 'chart.js/auto';  // Import the Chart.js library\n\n// The URL for the public CSV file from Google Sheets\nconst sheetUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv';\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);  // State to hold the data\n  const [chartData, setChartData] = useState({});  // State for chart data\n\n  useEffect(() => {\n    // Fetching data from Google Sheets using PapaParse\n    Papa.parse(sheetUrl, {\n      download: true,\n      header: true,\n      complete: (results) => {\n        console.log(\"Data fetched from Google Sheets:\", results.data);\n        setData(results.data);\n\n        // Prepare data for chart visualization\n        const dates = results.data.map(row => row.Date);\n        const reachData = results.data.map(row => row.Reach);\n        const impressionsData = results.data.map(row => row.Impressions);\n        const engagementData = results.data.map(row => row[\"Engagement (%)\"]);\n\n        setChartData({\n          labels: dates,\n          datasets: [\n            {\n              label: 'Reach',\n              data: reachData,\n              borderColor: 'rgba(75,192,192,1)',\n              fill: false,\n            },\n            {\n              label: 'Impressions',\n              data: impressionsData,\n              borderColor: 'rgba(255,159,64,1)',\n              fill: false,\n            },\n            {\n              label: 'Engagement',\n              data: engagementData,\n              borderColor: 'rgba(153,102,255,1)',\n              fill: false,\n            },\n          ],\n        });\n      },\n      error: (error) => {\n        console.error(\"Error fetching data:\", error);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Social Media Performance</h1>\n\n      {/* Data Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>Company ID</th>\n            <th>Company Name</th>\n            <th>Date</th>\n            <th>Reach</th>\n            <th>Impressions</th>\n            <th>Engagement (%)</th>\n            <th>Followers Gained</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              <td>{row[\"Company ID\"]}</td>\n              <td>{row[\"Company Name\"]}</td>\n              <td>{row[\"Date\"]}</td>\n              <td>{row[\"Reach\"]}</td>\n              <td>{row[\"Impressions\"]}</td>\n              <td>{row[\"Engagement (%)\"]}</td>\n              <td>{row[\"Followers Gained\"]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Chart */}\n      <div>\n        <h2>Performance Chart</h2>\n        <Line data={chartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}