{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\analytics-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        setData(result.data);\n        setLoading(false);\n      }\n    });\n  }, []);\n  const engagementData = data.map(entry => entry['Engagement (%)']);\n  const reachData = data.map(entry => entry['Reach']);\n  const impressionsData = data.map(entry => entry['Impressions']);\n  const followersData = data.map(entry => entry['Followers Gained']);\n  const dates = data.map(entry => entry['Date']);\n  const options = titleText => ({\n    responsive: true,\n    animation: {\n      duration: 1000\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: titleText,\n        font: {\n          size: 16\n        }\n      }\n    }\n  });\n  const engagementChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Engagement Rate (%)',\n      data: engagementData,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.4\n    }]\n  };\n  const followersChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Followers Gained',\n      data: followersData,\n      borderColor: 'rgba(153,102,255,1)',\n      fill: false,\n      tension: 0.4\n    }]\n  };\n  const reachImpressionsChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Reach',\n      data: reachData,\n      borderColor: 'rgba(255,99,132,1)',\n      fill: false,\n      tension: 0.4\n    }, {\n      label: 'Impressions',\n      data: impressionsData,\n      borderColor: 'rgba(54,162,235,1)',\n      fill: false,\n      tension: 0.4\n    }]\n  };\n  const totalCampaignChartData = {\n    labels: ['Reach', 'Impressions', 'Followers Gained'],\n    datasets: [{\n      data: [reachData.reduce((acc, curr) => acc + curr, 0), impressionsData.reduce((acc, curr) => acc + curr, 0), followersData.reduce((acc, curr) => acc + curr, 0)],\n      backgroundColor: ['rgba(255,99,132,0.2)', 'rgba(54,162,235,0.2)', 'rgba(75,192,192,0.2)'],\n      borderColor: ['rgba(255,99,132,1)', 'rgba(54,162,235,1)', 'rgba(75,192,192,1)'],\n      borderWidth: 1\n    }]\n  };\n  const hasValidData = data.length > 0 && engagementData.every(val => !isNaN(val));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleLoader, {\n        color: \"#00BFFF\",\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (!hasValidData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-container\",\n      children: \"No valid data found in the CSV file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Social Media Performance Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: engagementChartData,\n          options: options('Engagement Rate Over Time')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: followersChartData,\n          options: options('Followers Gained Over Time')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: reachImpressionsChartData,\n          options: options('Reach vs Impressions')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: totalCampaignChartData,\n          options: options('Total Campaign Performance')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","CircleLoader","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","loading","setLoading","parse","download","header","dynamicTyping","complete","result","engagementData","map","entry","reachData","impressionsData","followersData","dates","options","titleText","responsive","animation","duration","plugins","legend","position","title","display","text","font","size","engagementChartData","labels","datasets","label","borderColor","fill","tension","followersChartData","reachImpressionsChartData","totalCampaignChartData","reduce","acc","curr","backgroundColor","borderWidth","hasValidData","length","every","val","isNaN","className","children","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/analytics-dashboard/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Line, Pie } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { CircleLoader } from 'react-spinners';\nimport './Dashboard.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    Papa.parse(\n      'https://docs.google.com/spreadsheets/d/e/2PACX-1vSTTSyOvOYmKiGeKXUUzxGWjQ7z9QpoUv1rFM1kkz5g7_vgKNmbiOcZPBQnyQMQCLJcFTS_rJ03KVHD/pub?gid=0&single=true&output=csv',\n      {\n        download: true,\n        header: true,\n        dynamicTyping: true,\n        complete: (result) => {\n          setData(result.data);\n          setLoading(false);\n        },\n      }\n    );\n  }, []);\n\n  const engagementData = data.map((entry) => entry['Engagement (%)']);\n  const reachData = data.map((entry) => entry['Reach']);\n  const impressionsData = data.map((entry) => entry['Impressions']);\n  const followersData = data.map((entry) => entry['Followers Gained']);\n  const dates = data.map((entry) => entry['Date']);\n\n  const options = (titleText) => ({\n    responsive: true,\n    animation: {\n      duration: 1000,\n    },\n    plugins: {\n      legend: { position: 'top' },\n      title: {\n        display: true,\n        text: titleText,\n        font: { size: 16 },\n      },\n    },\n  });\n\n  const engagementChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Engagement Rate (%)',\n        data: engagementData,\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false,\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const followersChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Followers Gained',\n        data: followersData,\n        borderColor: 'rgba(153,102,255,1)',\n        fill: false,\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const reachImpressionsChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Reach',\n        data: reachData,\n        borderColor: 'rgba(255,99,132,1)',\n        fill: false,\n        tension: 0.4,\n      },\n      {\n        label: 'Impressions',\n        data: impressionsData,\n        borderColor: 'rgba(54,162,235,1)',\n        fill: false,\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const totalCampaignChartData = {\n    labels: ['Reach', 'Impressions', 'Followers Gained'],\n    datasets: [\n      {\n        data: [\n          reachData.reduce((acc, curr) => acc + curr, 0),\n          impressionsData.reduce((acc, curr) => acc + curr, 0),\n          followersData.reduce((acc, curr) => acc + curr, 0),\n        ],\n        backgroundColor: [\n          'rgba(255,99,132,0.2)',\n          'rgba(54,162,235,0.2)',\n          'rgba(75,192,192,0.2)',\n        ],\n        borderColor: [\n          'rgba(255,99,132,1)',\n          'rgba(54,162,235,1)',\n          'rgba(75,192,192,1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const hasValidData = data.length > 0 && engagementData.every((val) => !isNaN(val));\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <CircleLoader color=\"#00BFFF\" size={80} />\n        <p>Loading data...</p>\n      </div>\n    );\n  }\n\n  if (!hasValidData) {\n    return <p className=\"loading-container\">No valid data found in the CSV file.</p>;\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Social Media Performance Dashboard</h2>\n\n      <div className=\"chart-container\">\n        <div className=\"chart-card\">\n          <Line data={engagementChartData} options={options('Engagement Rate Over Time')} />\n        </div>\n\n        <div className=\"chart-card\">\n          <Line data={followersChartData} options={options('Followers Gained Over Time')} />\n        </div>\n\n        <div className=\"chart-card\">\n          <Line data={reachImpressionsChartData} options={options('Reach vs Impressions')} />\n        </div>\n\n        <div className=\"chart-card\">\n          <Pie data={totalCampaignChartData} options={options('Total Campaign Performance')} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}